/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Copyright 2019 Red Hat, Inc.
 *
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/openshift/machine-api-operator/pkg/apis/machine/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MachineReplicaSetLister helps list MachineReplicaSets.
type MachineReplicaSetLister interface {
	// List lists all MachineReplicaSets in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.MachineReplicaSet, err error)
	// MachineReplicaSets returns an object that can list and get MachineReplicaSets.
	MachineReplicaSets(namespace string) MachineReplicaSetNamespaceLister
	MachineReplicaSetListerExpansion
}

// machineReplicaSetLister implements the MachineReplicaSetLister interface.
type machineReplicaSetLister struct {
	indexer cache.Indexer
}

// NewMachineReplicaSetLister returns a new MachineReplicaSetLister.
func NewMachineReplicaSetLister(indexer cache.Indexer) MachineReplicaSetLister {
	return &machineReplicaSetLister{indexer: indexer}
}

// List lists all MachineReplicaSets in the indexer.
func (s *machineReplicaSetLister) List(selector labels.Selector) (ret []*v1beta1.MachineReplicaSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.MachineReplicaSet))
	})
	return ret, err
}

// MachineReplicaSets returns an object that can list and get MachineReplicaSets.
func (s *machineReplicaSetLister) MachineReplicaSets(namespace string) MachineReplicaSetNamespaceLister {
	return machineReplicaSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MachineReplicaSetNamespaceLister helps list and get MachineReplicaSets.
type MachineReplicaSetNamespaceLister interface {
	// List lists all MachineReplicaSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.MachineReplicaSet, err error)
	// Get retrieves the MachineReplicaSet from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.MachineReplicaSet, error)
	MachineReplicaSetNamespaceListerExpansion
}

// machineReplicaSetNamespaceLister implements the MachineReplicaSetNamespaceLister
// interface.
type machineReplicaSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MachineReplicaSets in the indexer for a given namespace.
func (s machineReplicaSetNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.MachineReplicaSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.MachineReplicaSet))
	})
	return ret, err
}

// Get retrieves the MachineReplicaSet from the indexer for a given namespace and name.
func (s machineReplicaSetNamespaceLister) Get(name string) (*v1beta1.MachineReplicaSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("machinereplicaset"), name)
	}
	return obj.(*v1beta1.MachineReplicaSet), nil
}
